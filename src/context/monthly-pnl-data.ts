// Instead of using csv-parse, we'll parse the data directly
const parseCSV = (csvData: string) => {
  const lines = csvData.trim().split('\n');
  const headers = lines[0].split(',');
  
  return lines.slice(1).map(line => {
    const values = line.split(',');
    return headers.reduce((obj: any, header, index) => {
      obj[header.trim()] = header === 'date' ? values[index].trim() : parseFloat(values[index]);
      return obj;
    }, {});
  });
};

const csvData = `date,RT AS Imbalance,RT Reliability Deployment AS Imbalance,RT Energy Imbalance,ECRS,Non Spin,RRS,Reg Up,Reg Down,DA Energy
2024-01-01,1094.62,18464.57,-158249.17,1459202.89,182446.53,313116.03,874558.64,835237.09,446830.50
2024-02-01,0.95,1460.24,-20606.24,166707.04,34656.80,99347.90,33580.66,25822.28,15045.67
2024-03-01,2065.98,13265.52,-41126.18,454810.97,167203.83,135436.71,124282.17,54156.66,72017.86
2024-04-01,32999.84,26523.37,-217980.55,732702.85,184033.03,104082.69,398478.56,119220.85,149208.11
2024-05-01,11859.35,4799.83,-268381.08,2671181.22,1133878.90,135993.21,394367.88,375912.36,475988.69
2024-06-01,97.64,3161.61,-152057.64,810143.24,116591.76,136514.47,69094.78,129331.82,192193.09
2024-07-01,596.10,1713.38,-64982.26,265546.75,22263.94,156126.39,52828.59,62908.82,71362.92
2024-08-01,34290.57,7485.72,-43237.34,615441.27,37446.13,230394.11,390346.70,312541.50,370114.68
2024-09-01,953.15,3251.81,-96653.01,119719.27,19685.94,188112.65,9725.64,23074.30,78313.78
2024-10-01,1154.30,12206.99,-147541.60,178118.32,59999.42,236513.63,216215.26,54455.57,269532.53
2024-11-01,6276.34,9572.27,-46097.62,115581.40,55753.48,133340.38,142591.40,23687.34,90242.13
2024-12-01,0.00,12963.63,-46096.04,43688.48,50137.04,70177.44,23819.83,18284.70,7636.57`;

export const monthlyPnLData = parseCSV(csvData);